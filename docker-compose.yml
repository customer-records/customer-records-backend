version: '3.8'

services:
  # Тестовая база
  db_test:
    image: postgres:13
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5439:5432"
    volumes:
      - postgres_data_test:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10

  # Инициализация схемы тестовой базы
  database-init-test:
    build: ./service-database
    env_file:
      - .env
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: db_test
      DB_NAME: ${DB_NAME}
      DB_PORT: 5432
    depends_on:
      db_test:
        condition: service_healthy

  # Тестовый Gateway
  gateway_test:
    build: ./gateway
    env_file:
      - .env
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: db_test
      DB_NAME: ${DB_NAME}
      DB_PORT: 5432
    ports:
      - "4001:4000"
    depends_on:
      - db_test
      - database-init-test

  # Тестовый Auth
  auth_test:
    build: ./service-auth
    env_file:
      - .env
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: db_test
      DB_NAME: ${DB_NAME}
      DB_PORT: 5432
    ports:
      - "3001:3000"
    depends_on:
      - db_test
      - database-init-test

  # Тестовый Calendar
  calendar_test:
    build: ./service-calendar
    env_file:
      - .env
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: db_test
      DB_NAME: ${DB_NAME}
      DB_PORT: 5432
      TELEGRAM_BOT_SERVICE: "telegram-bot-test:5001"
    ports:
      - "8001:8000"
    depends_on:
      - db_test
      - database-init-test

  # Тестовый Telegram Bot
  telegram-bot-test:
    build: ./service-telegram-bot
    env_file:
      - .env
    environment:
      TELEGRAM_BOT_TOKEN_INFO: ${TELEGRAM_BOT_TOKEN_INFO}
      SERVICE_CALENDAR_URL: "calendar_test:8001"
    ports:
      - "5001:5000"
    depends_on:
      - calendar_test

  # Тестовый Telegram Code Sender
  telegram-code-sender-test:
    build: ./service-telegram-code-sender
    env_file:
      - .env
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: db_test
      DB_NAME: ${DB_NAME}
      DB_PORT: 5432
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
    ports:
      - "7002:7000"
    depends_on:
      - db_test
      - database-init-test

  # Тестовый WhatsApp Code Sender
  whatsapp-code-sender-test:
    build: ./service-whatsapp-code-sender
    env_file:
      - .env
    environment:
      - PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium
    ports:
      - "7003:7001"
    volumes:
      - whatsapp-session-test:/app/.wwebjs_auth
    security_opt:
      - seccomp:unconfined
    cap_add:
      - SYS_ADMIN
    depends_on:
      - db_test
      - database-init-test

volumes:
  postgres_data_test:
  whatsapp-session-test:
